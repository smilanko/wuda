//
//  GeodesicIcosahedron1.swift
//  Wuda
//
//  Found on an online source:
//  http://dmccooey.com/polyhedra/GeodesicIcosahedron8.html
//  A thank you to the author
//

import Foundation
import SceneKit

class GeodesicIcosahedron8 : Pattern {
    
    let C0  = 0.0311353963946264757984006471587
    let C1  = 0.0574476477316607507483407554558
    let C2  = 0.0670213285077847153921594101460
    let C3  = 0.0999247119638660666829197921780
    let C4  = 0.106556756153866215222948174960
    let C5  = 0.131867863423260709006102484949
    let C6  = 0.1569348857735727869825579193746
    let C7  = 0.166946040471650782075079202324
    let C8  = 0.196606939361538122863314128311
    let C9  = 0.2035478495825165321152304713051
    let C10 = 0.222790582807596628076439568561
    let C11 = 0.229371589441036053817487528696
    let C12 = 0.2895591859650960163351702211053
    let C13 = 0.328474802784798831869416613260
    let C14 = 0.337814376937803994876723170427
    let C15 = 0.347027436802020409277347092074
    let C16 = 0.375564358042718984447391932413
    let C17 = 0.378162833196646885075747739232
    let C18 = 0.411068956914616127170907269751
    let C19 = 0.42142704938835672534127270605453
    let C20 = 0.438152356276967545648581924260
    let C21 = 0.479573815265950771315658155844
    let C22 = 0.499495957211382545359592219312
    let C23 = 0.528062693415056483239965398103
    let C24 = 0.538077068240833612331501716438
    let C25 = 0.550575286384536941392577563379
    let C26 = 0.588931043085383872829092730249
    let C27 = 0.600953416004243513152187307794
    let C28 = 0.624435641957281015552608067587
    let C29 = 0.641255395539529321798527204729
    let C30 = 0.646519855737601553390737358168
    let C31 = 0.707510172158109728375135482753
    let C32 = 0.7082767240473140371906866148752
    let C33 = 0.718437073547997923306453978464
    let C34 = 0.739543759699414959040323883012
    let C35 = 0.784292770582021764400335627651
    let C36 = 0.796991407431075709788664638467
    let C37 = 0.815428166976648240198736274809
    let C38 = 0.821042581318819138415922195898
    let C39 = 0.854423386136376674143005431278
    let C40 = 0.875891445178637607208224886864
    let C41 = 0.878490229050479889164262951354
    let C42 = 0.921984923130514455421684449769
    let C43 = 0.937648313488350091008174143571
    let C44 = 0.9412276563555945513828935470253
    let C45 = 0.979069772477333316675250375156
    
    public func generateVertices() -> [SCNVector3] {
        return [SCNVector3(  C5,  -C1,  1.0), SCNVector3(  C5,   C1, -1.0), SCNVector3( -C5,   C1,  1.0), SCNVector3( -C5,  -C1, -1.0), SCNVector3( 1.0,  -C5,   C1), SCNVector3( 1.0,   C5,  -C1), SCNVector3(-1.0,   C5,   C1), SCNVector3(-1.0,  -C5,  -C1), SCNVector3(  C1, -1.0,   C5), SCNVector3(  C1,  1.0,  -C5), SCNVector3( -C1,  1.0,   C5), SCNVector3( -C1, -1.0,  -C5), SCNVector3(  C3,  C11,  C45), SCNVector3(  C3, -C11, -C45), SCNVector3( -C3, -C11,  C45), SCNVector3( -C3,  C11, -C45), SCNVector3( C45,   C3,  C11), SCNVector3( C45,  -C3, -C11), SCNVector3(-C45,  -C3,  C11), SCNVector3(-C45,   C3, -C11), SCNVector3( C11,  C45,   C3), SCNVector3( C11, -C45,  -C3), SCNVector3(-C11, -C45,   C3), SCNVector3(-C11,  C45,  -C3), SCNVector3( C15,   C4,  C44), SCNVector3( C15,  -C4, -C44), SCNVector3(-C15,  -C4,  C44), SCNVector3(-C15,   C4, -C44), SCNVector3( C44,  C15,   C4), SCNVector3( C44, -C15,  -C4), SCNVector3(-C44, -C15,   C4), SCNVector3(-C44,  C15,  -C4), SCNVector3(  C4,  C44,  C15), SCNVector3(  C4, -C44, -C15), SCNVector3( -C4, -C44,  C15), SCNVector3( -C4,  C44, -C15), SCNVector3(  C7, -C14,  C43), SCNVector3(  C7,  C14, -C43), SCNVector3( -C7,  C14,  C43), SCNVector3( -C7, -C14, -C43), SCNVector3( C43,  -C7,  C14), SCNVector3( C43,   C7, -C14), SCNVector3(-C43,   C7,  C14), SCNVector3(-C43,  -C7, -C14), SCNVector3( C14, -C43,   C7), SCNVector3( C14,  C43,  -C7), SCNVector3(-C14,  C43,   C7), SCNVector3(-C14, -C43,  -C7), SCNVector3( C17,  -C6,  C42), SCNVector3( C17,   C6, -C42), SCNVector3(-C17,   C6,  C42), SCNVector3(-C17,  -C6, -C42), SCNVector3( C42, -C17,   C6), SCNVector3( C42,  C17,  -C6), SCNVector3(-C42,  C17,   C6), SCNVector3(-C42, -C17,  -C6), SCNVector3(  C6, -C42,  C17), SCNVector3(  C6,  C42, -C17), SCNVector3( -C6,  C42,  C17), SCNVector3( -C6, -C42, -C17), SCNVector3( C13,  C16,  C41), SCNVector3( C13, -C16, -C41), SCNVector3(-C13, -C16,  C41), SCNVector3(-C13,  C16, -C41), SCNVector3( C41,  C13,  C16), SCNVector3( C41, -C13, -C16), SCNVector3(-C41, -C13,  C16), SCNVector3(-C41,  C13, -C16), SCNVector3( C16,  C41,  C13), SCNVector3( C16, -C41, -C13), SCNVector3(-C16, -C41,  C13), SCNVector3(-C16,  C41, -C13), SCNVector3(  C2,  C22,  C40), SCNVector3(  C2, -C22, -C40), SCNVector3( -C2, -C22,  C40), SCNVector3( -C2,  C22, -C40), SCNVector3( C40,   C2,  C22), SCNVector3( C40,  -C2, -C22), SCNVector3(-C40,  -C2,  C22), SCNVector3(-C40,   C2, -C22), SCNVector3( C22,  C40,   C2), SCNVector3( C22, -C40,  -C2), SCNVector3(-C22, -C40,   C2), SCNVector3(-C22,  C40,  -C2), SCNVector3( C23,  0.0,  C39), SCNVector3( C23,  0.0, -C39), SCNVector3(-C23,  0.0,  C39), SCNVector3(-C23,  0.0, -C39), SCNVector3( C39,  C23,  0.0), SCNVector3( C39, -C23,  0.0), SCNVector3(-C39,  C23,  0.0), SCNVector3(-C39, -C23,  0.0), SCNVector3( 0.0,  C39,  C23), SCNVector3( 0.0,  C39, -C23), SCNVector3( 0.0, -C39,  C23), SCNVector3( 0.0, -C39, -C23), SCNVector3( C19, -C18,  C38), SCNVector3( C19,  C18, -C38), SCNVector3(-C19,  C18,  C38), SCNVector3(-C19, -C18, -C38), SCNVector3( C38, -C19,  C18), SCNVector3( C38,  C19, -C18), SCNVector3(-C38,  C19,  C18), SCNVector3(-C38, -C19, -C18), SCNVector3( C18, -C38,  C19), SCNVector3( C18,  C38, -C19), SCNVector3(-C18,  C38,  C19), SCNVector3(-C18, -C38, -C19), SCNVector3( C25,  C10,  C37), SCNVector3( C25, -C10, -C37), SCNVector3(-C25, -C10,  C37), SCNVector3(-C25,  C10, -C37), SCNVector3( C37,  C25,  C10), SCNVector3( C37, -C25, -C10), SCNVector3(-C37, -C25,  C10), SCNVector3(-C37,  C25, -C10), SCNVector3( C10,  C37,  C25), SCNVector3( C10, -C37, -C25), SCNVector3(-C10, -C37,  C25), SCNVector3(-C10,  C37, -C25), SCNVector3(  C8, -C26,  C36), SCNVector3(  C8,  C26, -C36), SCNVector3( -C8,  C26,  C36), SCNVector3( -C8, -C26, -C36), SCNVector3( C36,  -C8,  C26), SCNVector3( C36,   C8, -C26), SCNVector3(-C36,   C8,  C26), SCNVector3(-C36,  -C8, -C26), SCNVector3( C26, -C36,   C8), SCNVector3( C26,  C36,  -C8), SCNVector3(-C26,  C36,   C8), SCNVector3(-C26, -C36,  -C8), SCNVector3( C27,  -C9,  C35), SCNVector3( C27,   C9, -C35), SCNVector3(-C27,   C9,  C35), SCNVector3(-C27,  -C9, -C35), SCNVector3( C35, -C27,   C9), SCNVector3( C35,  C27,  -C9), SCNVector3(-C35,  C27,   C9), SCNVector3(-C35, -C27,  -C9), SCNVector3(  C9, -C35,  C27), SCNVector3(  C9,  C35, -C27), SCNVector3( -C9,  C35,  C27), SCNVector3( -C9, -C35, -C27), SCNVector3( C12,  C28,  C34), SCNVector3( C12, -C28, -C34), SCNVector3(-C12, -C28,  C34), SCNVector3(-C12,  C28, -C34), SCNVector3( C34,  C12,  C28), SCNVector3( C34, -C12, -C28), SCNVector3(-C34, -C12,  C28), SCNVector3(-C34,  C12, -C28), SCNVector3( C28,  C34,  C12), SCNVector3( C28, -C34, -C12), SCNVector3(-C28, -C34,  C12), SCNVector3(-C28,  C34, -C12), SCNVector3( C31,   C0,  C33), SCNVector3( C31,  -C0, -C33), SCNVector3(-C31,  -C0,  C33), SCNVector3(-C31,   C0, -C33), SCNVector3( C33,  C31,   C0), SCNVector3( C33, -C31,  -C0), SCNVector3(-C33, -C31,   C0), SCNVector3(-C33,  C31,  -C0), SCNVector3(  C0,  C33,  C31), SCNVector3(  C0, -C33, -C31), SCNVector3( -C0, -C33,  C31), SCNVector3( -C0,  C33, -C31), SCNVector3( C24,  C21,  C32), SCNVector3( C24, -C21, -C32), SCNVector3(-C24, -C21,  C32), SCNVector3(-C24,  C21, -C32), SCNVector3( C32,  C24,  C21), SCNVector3( C32, -C24, -C21), SCNVector3(-C32, -C24,  C21), SCNVector3(-C32,  C24, -C21), SCNVector3( C21,  C32,  C24), SCNVector3( C21, -C32, -C24), SCNVector3(-C21, -C32,  C24), SCNVector3(-C21,  C32, -C24), SCNVector3( C20, -C29,  C30), SCNVector3( C20,  C29, -C30), SCNVector3(-C20,  C29,  C30), SCNVector3(-C20, -C29, -C30), SCNVector3( C30, -C20,  C29), SCNVector3( C30,  C20, -C29), SCNVector3(-C30,  C20,  C29), SCNVector3(-C30, -C20, -C29), SCNVector3( C29, -C30,  C20), SCNVector3( C29,  C30, -C20), SCNVector3(-C29,  C30,  C20), SCNVector3(-C29, -C30, -C20)]
    }
    
    public func generateFaces() -> [Int] {
        return [84, 24, 48 , 84, 48, 132 , 84, 132, 156 , 84, 156, 108 , 84, 108, 24 , 85, 25, 49 , 85, 49, 133 , 85, 133, 157 , 85, 157, 109 , 85, 109, 25 , 86, 26, 50 , 86, 50, 134 , 86, 134, 158 , 86, 158, 110 , 86, 110, 26 , 87, 27, 51 , 87, 51, 135 , 87, 135, 159 , 87, 159, 111 , 87, 111, 27 , 88, 28, 53 , 88, 53, 137 , 88, 137, 160 , 88, 160, 112 , 88, 112, 28 , 89, 29, 52 , 89, 52, 136 , 89, 136, 161 , 89, 161, 113 , 89, 113, 29 , 90, 31, 54 , 90, 54, 138 , 90, 138, 163 , 90, 163, 115 , 90, 115, 31 , 91, 30, 55 , 91, 55, 139 , 91, 139, 162 , 91, 162, 114 , 91, 114, 30 , 92, 32, 58 , 92, 58, 142 , 92, 142, 164 , 92, 164, 116 , 92, 116, 32 , 93, 35, 57 , 93, 57, 141 , 93, 141, 167 , 93, 167, 119 , 93, 119, 35 , 94, 34, 56 , 94, 56, 140 , 94, 140, 166 , 94, 166, 118 , 94, 118, 34 , 95, 33, 59 , 95, 59, 143 , 95, 143, 165 , 95, 165, 117 , 95, 117, 33 , 0, 14, 36 , 1, 15, 37 , 2, 12, 38 , 3, 13, 39 , 4, 16, 40 , 5, 17, 41 , 6, 18, 42 , 7, 19, 43 , 8, 21, 44 , 9, 20, 45 , 10, 23, 46 , 11, 22, 47 , 60, 72, 12 , 61, 73, 13 , 62, 74, 14 , 63, 75, 15 , 64, 76, 16 , 65, 77, 17 , 66, 78, 18 , 67, 79, 19 , 68, 80, 20 , 69, 81, 21 , 70, 82, 22 , 71, 83, 23 , 96, 180, 184 , 97, 181, 185 , 98, 182, 186 , 99, 183, 187 , 100, 184, 188 , 101, 185, 189 , 102, 186, 190 , 103, 187, 191 , 104, 188, 180 , 105, 189, 181 , 106, 190, 182 , 107, 191, 183 , 120, 36, 74 , 121, 37, 75 , 122, 38, 72 , 123, 39, 73 , 124, 40, 76 , 125, 41, 77 , 126, 42, 78 , 127, 43, 79 , 128, 44, 81 , 129, 45, 80 , 130, 46, 83 , 131, 47, 82 , 144, 168, 176 , 145, 169, 177 , 146, 170, 178 , 147, 171, 179 , 148, 172, 168 , 149, 173, 169 , 150, 174, 170 , 151, 175, 171 , 152, 176, 172 , 153, 177, 173 , 154, 178, 174 , 155, 179, 175 , 0, 48, 24 , 1, 49, 25 , 2, 50, 26 , 3, 51, 27 , 4, 52, 29 , 5, 53, 28 , 6, 54, 31 , 7, 55, 30 , 8, 56, 34 , 9, 57, 35 , 10, 58, 32 , 11, 59, 33 , 60, 24, 108 , 61, 25, 109 , 62, 26, 110 , 63, 27, 111 , 64, 28, 112 , 65, 29, 113 , 66, 30, 114 , 67, 31, 115 , 68, 32, 116 , 69, 33, 117 , 70, 34, 118 , 71, 35, 119 , 96, 132, 48 , 97, 133, 49 , 98, 134, 50 , 99, 135, 51 , 100, 136, 52 , 101, 137, 53 , 102, 138, 54 , 103, 139, 55 , 104, 140, 56 , 105, 141, 57 , 106, 142, 58 , 107, 143, 59 , 120, 166, 140 , 121, 167, 141 , 122, 164, 142 , 123, 165, 143 , 124, 156, 132 , 125, 157, 133 , 126, 158, 134 , 127, 159, 135 , 128, 161, 136 , 129, 160, 137 , 130, 163, 138 , 131, 162, 139 , 144, 116, 164 , 145, 117, 165 , 146, 118, 166 , 147, 119, 167 , 148, 108, 156 , 149, 109, 157 , 150, 110, 158 , 151, 111, 159 , 152, 112, 160 , 153, 113, 161 , 154, 114, 162 , 155, 115, 163 , 48, 0, 36 , 49, 1, 37 , 50, 2, 38 , 51, 3, 39 , 52, 4, 40 , 53, 5, 41 , 54, 6, 42 , 55, 7, 43 , 56, 8, 44 , 57, 9, 45 , 58, 10, 46 , 59, 11, 47 , 60, 12, 24 , 61, 13, 25 , 62, 14, 26 , 63, 15, 27 , 64, 16, 28 , 65, 17, 29 , 66, 18, 30 , 67, 19, 31 , 68, 20, 32 , 69, 21, 33 , 70, 22, 34 , 71, 23, 35 , 72, 164, 122 , 73, 165, 123 , 74, 166, 120 , 75, 167, 121 , 76, 156, 124 , 77, 157, 125 , 78, 158, 126 , 79, 159, 127 , 80, 160, 129 , 81, 161, 128 , 82, 162, 131 , 83, 163, 130 , 96, 184, 132 , 97, 185, 133 , 98, 186, 134 , 99, 187, 135 , 100, 188, 136 , 101, 189, 137 , 102, 190, 138 , 103, 191, 139 , 104, 180, 140 , 105, 181, 141 , 106, 182, 142 , 107, 183, 143 , 108, 148, 168 , 109, 149, 169 , 110, 150, 170 , 111, 151, 171 , 112, 152, 172 , 113, 153, 173 , 114, 154, 174 , 115, 155, 175 , 116, 144, 176 , 117, 145, 177 , 118, 146, 178 , 119, 147, 179 , 24, 12, 0 , 25, 13, 1 , 26, 14, 2 , 27, 15, 3 , 28, 16, 5 , 29, 17, 4 , 30, 18, 7 , 31, 19, 6 , 32, 20, 10 , 33, 21, 11 , 34, 22, 8 , 35, 23, 9 , 36, 96, 48 , 37, 97, 49 , 38, 98, 50 , 39, 99, 51 , 40, 100, 52 , 41, 101, 53 , 42, 102, 54 , 43, 103, 55 , 44, 104, 56 , 45, 105, 57 , 46, 106, 58 , 47, 107, 59 , 156, 76, 148 , 157, 77, 149 , 158, 78, 150 , 159, 79, 151 , 160, 80, 152 , 161, 81, 153 , 162, 82, 154 , 163, 83, 155 , 164, 72, 144 , 165, 73, 145 , 166, 74, 146 , 167, 75, 147 , 168, 60, 108 , 169, 61, 109 , 170, 62, 110 , 171, 63, 111 , 172, 64, 112 , 173, 65, 113 , 174, 66, 114 , 175, 67, 115 , 176, 68, 116 , 177, 69, 117 , 178, 70, 118 , 179, 71, 119 , 180, 120, 140 , 181, 121, 141 , 182, 122, 142 , 183, 123, 143 , 184, 124, 132 , 185, 125, 133 , 186, 126, 134 , 187, 127, 135 , 188, 128, 136 , 189, 129, 137 , 190, 130, 138 , 191, 131, 139 , 12, 2, 0 , 13, 3, 1 , 14, 0, 2 , 15, 1, 3 , 16, 4, 5 , 17, 5, 4 , 18, 6, 7 , 19, 7, 6 , 20, 9, 10 , 21, 8, 11 , 22, 11, 8 , 23, 10, 9 , 36, 120, 96 , 37, 121, 97 , 38, 122, 98 , 39, 123, 99 , 40, 124, 100 , 41, 125, 101 , 42, 126, 102 , 43, 127, 103 , 44, 128, 104 , 45, 129, 105 , 46, 130, 106 , 47, 131, 107 , 72, 60, 144 , 73, 61, 145 , 74, 62, 146 , 75, 63, 147 , 76, 64, 148 , 77, 65, 149 , 78, 66, 150 , 79, 67, 151 , 80, 68, 152 , 81, 69, 153 , 82, 70, 154 , 83, 71, 155 , 168, 144, 60 , 169, 145, 61 , 170, 146, 62 , 171, 147, 63 , 172, 148, 64 , 173, 149, 65 , 174, 150, 66 , 175, 151, 67 , 176, 152, 68 , 177, 153, 69 , 178, 154, 70 , 179, 155, 71 , 180, 96, 120 , 181, 97, 121 , 182, 98, 122 , 183, 99, 123 , 184, 100, 124 , 185, 101, 125 , 186, 102, 126 , 187, 103, 127 , 188, 104, 128 , 189, 105, 129 , 190, 106, 130 , 191, 107, 131 , 12, 72, 38 , 13, 73, 39 , 14, 74, 36 , 15, 75, 37 , 16, 76, 40 , 17, 77, 41 , 18, 78, 42 , 19, 79, 43 , 20, 80, 45 , 21, 81, 44 , 22, 82, 47 , 23, 83, 46 , 168, 172, 176 , 169, 173, 177 , 170, 174, 178 , 171, 175, 179 , 180, 188, 184 , 181, 189, 185 , 182, 190, 186 , 183, 191, 187]
    }
    
}
